stages:
  - auto-tagging
  - build
  - deploy-dev
  - deploy-stage

auto-tagging:
  stage: auto-tagging
  image: bash:latest
  before_script:
    - |
      apk update && apk add git
      git --version
  script:
    - |
      #!/bin/bash
      set -x
      bash --version
      SCRIPTS_DIR=$(mktemp -d)
      git clone -q --depth 1 https://github.com/unforswearing/bash_semver.git "$SCRIPTS_DIR"
      echo "BRANCH" ${CI_COMMIT_REF_NAME}
      LATEST_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))

      echo "DETECTED_LATEST_VERSION" $LATEST_VERSION
      # VER=(`echo $LATEST_VERSION | tr '.' ' '`)
      # ((VER[2]++))
      # NEW_VERSION="${VER[0]}.${VER[1]}.${VER[2]}"
      echo `bash "${SCRIPTS_DIR}/semver.bash -p ${LATEST_VERSION}"`
      NEW_VERSION=$(bash ${SCRIPTS_DIR}/semver.bash -p ${LATEST_VERSION})

      echo "NEW_VERSION" $NEW_VERSION
      GIT_URL="https://theprojectdientoan:${ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git"
      echo "GIT_URL" $GIT_URL
      git remote remove origin
      git remote add origin $GIT_URL
      git config user.email "theproject@dientoan.vn"
      git config user.name "[ci/cd] bot"
      git tag -fa $NEW_VERSION -m "[CI/CD] ${CI_COMMIT_MESSAGE}"
      git push origin $NEW_VERSION
  only:
    - main

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: ''
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE"
    - docker push "$CI_REGISTRY_IMAGE"
    - docker logout $CI_REGISTRY
  only:
    - tags

deploy-dev:
  image: alpine:latest
  stage: deploy-dev
  script:
    - apk update && apk add openssh-client
    - echo "$CI_COMMIT_TAG"
    - echo "$SSH_PRIVATE_KEY_DEV"
    - chmod og= $SSH_PRIVATE_KEY_DEV
    - ssh -i $SSH_PRIVATE_KEY_DEV -o StrictHostKeyChecking=no $SSH_SERVER_USER_DEV@$SSH_SERVER_IP_DEV "/usr/bin/zsh /root/dev-evn-crm/deploy.sh $CI_REGISTRY_IMAGE $CI_COMMIT_TAG"
  only:
    - tags

deploy-stage:
  image: alpine:latest
  stage: deploy-stage
  script:
    - apk update && apk add openssh-client
    - echo "$CI_COMMIT_TAG"
    - echo "$SSH_PRIVATE_KEY_STAGE"
    - chmod og= $SSH_PRIVATE_KEY_STAGE
    - ssh -i $SSH_PRIVATE_KEY_STAGE -o StrictHostKeyChecking=no $SSH_SERVER_USER_STAGE@$SSH_SERVER_IP_STAGE "/usr/bin/zsh /root/stage-evn-crm/deploy.sh $CI_REGISTRY_IMAGE $CI_COMMIT_TAG"
  only:
    - tags
  when: manual
